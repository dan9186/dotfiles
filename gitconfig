[user]
	name = Daniel Hess
	email = dan9186@gmail.com
	signingKey = 9E9957DF1655FD23

# Work specific settings
[include]
	path = .work_gitconfig

# URL Rewrites
[url "git@github.com:dan9186"]
	insteadOf = https://github.com/dan9186
	email = dan9186@gmail.com

[url "git@github.com:gomicro"]
	insteadOf = https://github.com/gomicro
	email = dan9186@gmail.com

[alias]
	# Show a graphed history of the repo
	lg1 = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all

	# Show a history of the merges
	lgm = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --merges

	# List contributors with number of commits
	contributors = shortlog --summary --numbered

	# Clean up branches that have already been merged into master
	cleanup = "!changes=$(git branch --merged master | grep -v '\\ master$'); if [[ -n "$changes" ]]; then echo $changes | xargs git branch -d; fi"

	# Force push only if no one else has pushed up additional commits
	forcepush = push --force-with-lease

	# Remove the old tag with this name and tag the latest commit with it.
	retag = "!r() { git tag -d $1 && git push origin :refs/tags/$1 && git tag $1; }; r"

	# Show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v

[filter "media"]
	clean = git media clean %f
	smudge = git media smudge %f
	required = true


# CLI Options
[fetch]
	prune = true

[merge]
	tool = vimdiff
	conflictstyle = diff3
	ff = only

[mergetool]
	prompt = false

[diff]
	tool = vimdiff
	renames = copies # Detect copies as well as renames

[color]
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	ui = true
	pager = true

[rebase]
	autosquash = true

[pull]
	ff = only

[push]
	default = matching
	followTags = true

[commit]
	gpgsign = true

[init]
	defaultBranch = master

# vim: filetype=gitconfig noexpandtab
